From d7c11d261b12be2d4eae9c03ce2d7485f7553c46 Mon Sep 17 00:00:00 2001
From: Flaviu <Flaviu@DESKTOP-HP>
Date: Thu, 2 Jan 2020 20:06:16 +0200
Subject: [PATCH 11/29] modifications

---
 Src/MainFrm.cpp | 91 +++++++++++++++++++++++++++++++++++++++++++++++--
 1 file changed, 89 insertions(+), 2 deletions(-)

diff --git a/Src/MainFrm.cpp b/Src/MainFrm.cpp
index 6a9fcb828..bb2c06a15 100644
--- a/Src/MainFrm.cpp
+++ b/Src/MainFrm.cpp
@@ -74,6 +74,8 @@
 #include "Bitmap.h"
 #include "CCrystalTextMarkers.h"
 
+#include "WindowsManagerDialog.h"
+
 using std::vector;
 using boost::begin;
 using boost::end;
@@ -232,7 +234,12 @@ BEGIN_MESSAGE_MAP(CMainFrame, CMDIFrameWnd)
 	ON_COMMAND_RANGE(ID_MRU_FIRST, ID_MRU_LAST, OnMRUs)
 	ON_UPDATE_COMMAND_UI(ID_MRU_FIRST, OnUpdateNoMRUs)
 	ON_UPDATE_COMMAND_UI(ID_NO_MRU, OnUpdateNoMRUs)
+	ON_COMMAND(ID_ACCEL_QUIT, &CMainFrame::OnAccelQuit)
 	//}}AFX_MSG_MAP
+	ON_MESSAGE(WMU_CHILDFRAMEADDED, &CMainFrame::OnChildFrameAdded)
+	ON_MESSAGE(WMU_CHILDFRAMEREMOVED, &CMainFrame::OnChildFrameRemoved)
+	ON_MESSAGE(WMU_CHILDFRAMEACTIVATE, &CMainFrame::OnChildFrameActivate)
+	ON_MESSAGE(WMU_CHILDFRAMEACTIVATED, &CMainFrame::OnChildFrameActivated)
 END_MESSAGE_MAP()
 
 /**
@@ -282,6 +289,8 @@ CMainFrame::~CMainFrame()
 {
 	GetOptionsMgr()->SaveOption(OPT_TABBAR_AUTO_MAXWIDTH, m_wndTabBar.GetAutoMaxWidth());
 	strdiff::Close();
+
+	m_arrChild.RemoveAll();
 }
 
 const TCHAR CMainFrame::szClassName[] = _T("WinMergeWindowClassW");
@@ -1681,12 +1690,21 @@ BOOL CMainFrame::PreTranslateMessage(MSG* pMsg)
 			AfxGetMainWnd()->SendMessage(WM_COMMAND, ID_APP_EXIT);
 			return TRUE;
 		}
-		else if (GetOptionsMgr()->GetBool(OPT_CLOSE_WITH_ESC) && m_wndTabBar.GetItemCount() == 0)
+/*		else if (GetOptionsMgr()->GetBool(OPT_CLOSE_WITH_ESC) && m_wndTabBar.GetItemCount() == 0)
 		{
 			AfxGetMainWnd()->PostMessage(WM_COMMAND, ID_APP_EXIT);
 			return FALSE;
-		}
+		}*/		// Don't close the app when user press escape and there is no tab opened, use Ctrl + Q instead like all editors do
+	}
+
+	if (WM_KEYDOWN == pMsg->message && VK_TAB == pMsg->wParam && GetAsyncKeyState(VK_CONTROL) < 0 && m_arrChild.GetSize() > 1)
+	{
+		CWindowsManagerDialog* pDlg = new CWindowsManagerDialog;
+		pDlg->Create(CWindowsManagerDialog::IDD, this);
+		pDlg->ShowWindow(SW_SHOW);
+		return TRUE;
 	}
+
 	return CMDIFrameWnd::PreTranslateMessage(pMsg);
 }
 
@@ -2521,3 +2539,72 @@ void CMainFrame::UpdateDocTitle()
 		}
 	}
 }
+
+void CMainFrame::OnAccelQuit()
+{
+	// TODO: Add your command handler code here
+
+	SendMessage(WM_CLOSE);
+}
+
+LRESULT CMainFrame::OnChildFrameAdded(WPARAM wParam, LPARAM lParam)
+{
+	for (int i = 0; i < m_arrChild.GetSize(); ++i)
+	{
+		if (reinterpret_cast<CMDIChildWnd*>(lParam) == m_arrChild.GetAt(i))
+		{
+			return 0;
+		}
+	}
+
+	m_arrChild.InsertAt(0, (CMDIChildWnd*)lParam);
+
+	return 1;
+}
+
+LRESULT CMainFrame::OnChildFrameRemoved(WPARAM wParam, LPARAM lParam)
+{
+	for (int i = 0; i < m_arrChild.GetSize(); ++i)
+	{
+		if (reinterpret_cast<CMDIChildWnd*>(lParam) == m_arrChild.GetAt(i))
+		{
+			m_arrChild.RemoveAt(i);
+			break;
+		}
+	}
+
+	return 1;
+}
+
+LRESULT CMainFrame::OnChildFrameActivate(WPARAM wParam, LPARAM lParam)
+{
+	for (int i = 0; i < m_arrChild.GetSize(); ++i)
+	{
+		if (reinterpret_cast<CMDIChildWnd*>(lParam) == m_arrChild.GetAt(i))
+		{
+			CMDIChildWnd* pMDIChild = m_arrChild.GetAt(i);
+			if (pMDIChild->IsIconic())
+				pMDIChild->ShowWindow(SW_RESTORE);
+			MDIActivate(pMDIChild);
+			break;
+		}
+	}
+
+	return 1;
+}
+// put lParam as index 0 in m_arrChild
+LRESULT CMainFrame::OnChildFrameActivated(WPARAM wParam, LPARAM lParam)
+{
+	for (int i = 0; i < m_arrChild.GetSize(); ++i)
+	{
+		if (reinterpret_cast<CMDIChildWnd*>(lParam) == m_arrChild.GetAt(i))
+		{
+			m_arrChild.RemoveAt(i);
+			break;
+		}
+	}
+
+	m_arrChild.InsertAt(0, (CMDIChildWnd*)lParam);
+
+	return 1;
+}
-- 
2.18.0.windows.1

